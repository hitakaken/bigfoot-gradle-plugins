buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'http://218.1.116.114/nexus/content/repositories/bigfoot-release' }
    }

    dependencies {
        classpath fileTree(dir:"${project.path}/../../../../build/libs",includes:['karaf-features-plugin-1.0.0-SNAPSHOT-all.jar'])
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'karaf-features'

group = "bigfoot.framework.library"

features {
    name "apache-commons"
    version "1.0.0-SNAPSHOT"
    resolver "(obr)"
    store  "${project.path}/feature/"
    //output new File(project.getRootDir(),"feature.xml")
    repository "mvn:org.apache.karaf.features/standard/$karaf_version/xml/features"
    feature {
        project()
        bundle self
    }
    // Apache Commons BCEL
    feature {
        name "commons-bcel"
        version "$apache_commons_bcel_version"
        description "Byte Code Engineering Library - analyze, create, and manipulate Java class files"
        details "url:http://commons.apache.org/proper/commons-bcel/\n" +
                "The Byte Code Engineering Library (Apache Commons BCELâ„¢) is intended to give users a " +
                "convenient way to analyze, create, and manipulate (binary) Java class files (those " +
                "ending with .class). Classes are represented by objects which contain all the symbolic " +
                "information of the given class: methods, fields and byte code instructions, in particular.\n" +
                "Such objects can be read from an existing file, be transformed by a program (e.g. a class " +
                "loader at run-time) and written to a file again. An even more interesting application is " +
                "the creation of classes from scratch at run-time. The Byte Code Engineering Library (BCEL) " +
                "may be also useful if you want to learn about the Java Virtual Machine (JVM) and the format " +
                "of Java .class files.\n" +
                "BCEL contains a byte code verifier named JustIce, which usually gives you much better information " +
                "about what's wrong with your code than the standard JVM message.\n" +
                "BCEL is already being used successfully in several projects such as compilers, optimizers, " +
                "obsfuscators, code generators and analysis tools. Unfortunately there hasn't been much development " +
                "going on over the past few years. Feel free to help out or you might want to have a look into " +
                "the ASM project at objectweb."
        bundle  group:"org.apache.servicemix.bundles",
                name:"org.apache.servicemix.bundles.bcel",
                version:"$apache_commons_bcel_sericemix_bundle_version"
        bundle  group:"org.apache.servicemix.bundles",
                name:"org.apache.servicemix.bundles.jakarta-regexp",
                version:"$apache_jakarta_regexp_sericemix_bundle_version"
    }
    // Apache Commons BeanUtils
    feature {
        name "commons-beanutils"
        version "$apache_commons_beanutils_version"
        description "Easy-to-use wrappers around the Java reflection and introspection APIs"
        details "url:http://commons.apache.org/proper/commons-beanutils/\n" +
                "Building scripting languages that interact with the Java object model (such as the Bean Scripting Framework).\n" +
                "Building template language processors for web presentation and similar uses (such as JSP or Velocity).\n" +
                "Building custom tag libraries for JSP and XSP environments (such as Jakarta Taglibs, Struts, Cocoon).\n" +
                "Consuming XML-based configuration resources (such as Ant build scripts, web application deployment descriptors, Tomcat's server.xml file)."
        feature "commons-collections"
        feature "commons-logging"
        bundle  group:"commons-beanutils",
                name:"commons-beanutils",
                version:"$apache_commons_beanutils_version"
    }
    // Apache Commons Chain
    feature{
        name "commons-chain"
        version "$apache_commons_chain_version"
        description "Chain of Responsibility pattern implemention."
        details "url:http://commons.apache.org/proper/commons-chain/\n" +
                "There are many different ways programmers organize processing logic within an application. " +
                "Often, the difference between an elegant architecture and a muddled ball-of mud is how control flows " +
                "from one process to another. To realize and retain elegance, we must organize complex, multi-step processes " +
                "so that they are easy to discover and change."
        bundle  group:"commons-chain",
                name:"commons-chain",
                version:"$apache_commons_chain_version"
    }
    // Apache Commons Cli
    feature{
        name "commons-cli"
        version "$apache_commons_cli_version"
        description "Command Line arguments parser."
        details "url:http://commons.apache.org/proper/commons-cli/\n" +
                "The Apache Commons CLI library provides an API for parsing command line options passed to programs. " +
                "It's also able to print help messages detailing the options available for a command line tool."
        bundle  group:"commons-cli",
                name:"commons-cli",
                version:"$apache_commons_cli_version"
    }
    // Apache Commons Codec
    feature{
        name "commons-codec"
        version "$apache_commons_codec_version"
        description "General encoding/decoding algorithms (for example phonetic, base64, URL)."
        details "url:http://commons.apache.org/proper/commons-codec/\n" +
                "Apache Commons Codec (TM) software provides implementations of common encoders and decoders " +
                "such as Base64, Hex, Phonetic and URLs."
        bundle  group:"commons-codec",
                name:"commons-codec",
                version:"$apache_commons_codec_version"
    }

    // Apache Commons Collections
    feature{
        name "commons-collections"
        version "$apache_commons_collections_version"
        description "Extends or augments the Java Collections Framework."
        details "url:http://commons.apache.org/proper/commons-collections/\n" +
                "The Java Collections Framework was a major addition in JDK 1.2. " +
                "It added many powerful data structures that accelerate development of most significant Java applications. " +
                "Since that time it has become the recognised standard for collection handling in Java."
        bundle  group:"commons-collections",
                name:"commons-collections",
                version:"$apache_commons_collections_version"
    }
    feature{
        name "commons-collections4"
        version "$apache_commons_collections4_version"
        description "Extends or augments the Java Collections Framework."
        details "url:http://commons.apache.org/proper/commons-collections/\n" +
                "The Java Collections Framework was a major addition in JDK 1.2. " +
                "It added many powerful data structures that accelerate development of most significant Java applications. " +
                "Since that time it has become the recognised standard for collection handling in Java."
        bundle  group:"org.apache.commons",
                name:"commons-collections4",
                version:"$apache_commons_collections4_version"
    }

}


